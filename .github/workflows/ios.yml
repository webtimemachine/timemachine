name: iOS Safari Extension Workflow

on:
  push:
    tags:
        - 'v*.*.*'
    branches: [ "main", "feature/chrome-history-extension" ]
  pull_request:
    branches: [ "main", "feature/chrome-history-extension" ]

jobs:
  build-and-test:
    defaults:
      run:
        working-directory: 'Web Time Machine'
    name: Build and Test iOS Safari Extension
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Fastlane
        run: gem install fastlane

      - name: Run Fastlane Match
        run: fastlane match development --readonly --git_basic_authorization ${{ secrets.GIT_AUTHORIZATION }} --git_url "https://github.com/eefh/certificates.git"

      - name: List all schemes
        run: xcodebuild -list

      - name: Build Safari Extension for Testing
        run: |
          xcodebuild build-for-testing -scheme "Web Time Machine (iOS)" -sdk iphonesimulator -derivedDataPath './build' -allowProvisioningUpdates

      - name: Test Safari Extension
        run: |
            if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then
              filetype_parameter="workspace"
              file_to_build="`ls -A | grep -i \\.xcworkspace\$`"
            else
              filetype_parameter="project"
              file_to_build="`ls -A | grep -i \\.xcodeproj\$`"
            fi
            file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
            xcodebuild test-without-building -scheme "Web Time Machine (iOS)" -"$filetype_parameter" "$file_to_build" -destination 'platform=iOS Simulator,name=iPhone 14,OS=16.2' -derivedDataPath './build'

      - name: Archive the iOS App
        run: |
          xcodebuild archive -scheme "Web Time Machine (iOS)" -sdk iphoneos -configuration AppStoreDistribution archive -archivePath "$PWD/build/Web Time Machine.xcarchive" -allowProvisioningUpdates

      
      - name: Export the .ipa File
        run: |
          xcodebuild -exportArchive -archivePath $PWD/build/Web Time Machine.xcarchive -exportOptionsPlist ExportOptions.plist -exportPath $PWD/build
      
      - name: Upload .ipa as an Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-ipa
          path: build/Web Time Machine.ipa
      
